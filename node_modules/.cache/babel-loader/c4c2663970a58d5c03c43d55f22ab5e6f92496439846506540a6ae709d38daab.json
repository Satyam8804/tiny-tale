{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satya\\\\OneDrive\\\\Desktop\\\\terribily-tiny-tales\\\\src\\\\Data\\\\Data.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport './Data.css';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart, LinearScale } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Data = () => {\n  _s();\n  const [data, setData] = useState('');\n  const [wordFrequency, setWordFrequency] = useState({});\n  const chartDataInstance = useRef(null);\n  const fetchData = async () => {\n    try {\n      const response = await fetch('https://www.terriblytinytales.com/test.txt');\n      const text = await response.text();\n      setData(text);\n      calculateWordFrequency(text);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    if (wordFrequency && Object.keys(wordFrequency).length > 0) {\n      renderChart();\n    }\n  }, [wordFrequency]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const calculateWordFrequency = text => {\n    const words = text.split(/\\s+/);\n    const frequency = {};\n    words.forEach(word => {\n      frequency[word] = (frequency[word] || 0) + 1;\n    });\n    setWordFrequency(frequency);\n  };\n  const renderChart = () => {\n    const sortedWords = Object.entries(wordFrequency).sort((a, b) => b[1] - a[1]);\n    const labels = sortedWords.slice(0, 20).map(_ref => {\n      let [word] = _ref;\n      return word;\n    });\n    const counts = sortedWords.slice(0, 20).map(_ref2 => {\n      let [_, count] = _ref2;\n      return count;\n    });\n    const data = {\n      labels,\n      datasets: [{\n        label: 'Word Frequency',\n        data: counts,\n        backgroundColor: 'rgba(75, 192, 192, 0.6)'\n      }]\n    };\n    const ctx = document.getElementById('chart');\n    if (ctx) {\n      if (chartDataInstance.current) {\n        chartDataInstance.current.destroy();\n      }\n      chartDataInstance.current = new Chart(ctx.getContext('2d'), {\n        type: 'bar',\n        data,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              beginAtZero: true,\n              stepSize: 1\n            }\n          }\n        },\n        plugins: {\n          scales: {\n            y: {\n              typ,\n              beginAtZero: true,\n              ticks: {\n                stepSize: 1\n              }\n            }\n          }\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data\",\n    children: [data, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Word Frequency:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      style: {\n        width: '100%',\n        height: '400px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Data, \"CvDie5gDL9SnghWcs49kEfbQNhI=\");\n_c = Data;\nexport default Data;\nvar _c;\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Bar","Chart","LinearScale","jsxDEV","_jsxDEV","Data","_s","data","setData","wordFrequency","setWordFrequency","chartDataInstance","fetchData","response","fetch","text","calculateWordFrequency","error","console","Object","keys","length","renderChart","words","split","frequency","forEach","word","sortedWords","entries","sort","a","b","labels","slice","map","_ref","counts","_ref2","_","count","datasets","label","backgroundColor","ctx","document","getElementById","current","destroy","getContext","type","options","responsive","maintainAspectRatio","scales","y","beginAtZero","stepSize","plugins","typ","ticks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","id","_c","$RefreshReg$"],"sources":["C:/Users/satya/OneDrive/Desktop/terribily-tiny-tales/src/Data/Data.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport './Data.css';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart, LinearScale } from 'chart.js';\r\n\r\nconst Data = () => {\r\n  const [data, setData] = useState('');\r\n  const [wordFrequency, setWordFrequency] = useState({});\r\n  const chartDataInstance = useRef(null);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch('https://www.terriblytinytales.com/test.txt');\r\n      const text = await response.text();\r\n      setData(text);\r\n      calculateWordFrequency(text);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (wordFrequency && Object.keys(wordFrequency).length > 0) {\r\n      renderChart();\r\n    }\r\n  }, [wordFrequency]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const calculateWordFrequency = (text) => {\r\n    const words = text.split(/\\s+/);\r\n    const frequency = {};\r\n\r\n    words.forEach((word) => {\r\n      frequency[word] = (frequency[word] || 0) + 1;\r\n    });\r\n\r\n    setWordFrequency(frequency);\r\n  };\r\n\r\n  const renderChart = () => {\r\n    const sortedWords = Object.entries(wordFrequency).sort((a, b) => b[1] - a[1]);\r\n    const labels = sortedWords.slice(0, 20).map(([word]) => word);\r\n    const counts = sortedWords.slice(0, 20).map(([_, count]) => count);\r\n\r\n    const data = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Word Frequency',\r\n          data: counts,\r\n          backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n        },\r\n      ],\r\n    };\r\n\r\n    const ctx = document.getElementById('chart');\r\n    if (ctx) {\r\n      if (chartDataInstance.current) {\r\n        chartDataInstance.current.destroy();\r\n      }\r\n      chartDataInstance.current = new Chart(ctx.getContext('2d'), {\r\n        type: 'bar',\r\n        data,\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              stepSize: 1,\r\n            },\r\n          },\r\n        },\r\n        plugins: {\r\n          scales: {\r\n            y: {\r\n              typ,\r\n              beginAtZero: true,\r\n              ticks: {\r\n                stepSize: 1,\r\n              },\r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"data\">\r\n      {data}\r\n      <h2>Word Frequency:</h2>\r\n\r\n      <div className=\"chart-container\" style={{ width: '100%', height: '400px' }}>\r\n        <canvas id=\"chart\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Data;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}